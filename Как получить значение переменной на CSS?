В CSS нет переменных в традиционном программистском смысле, как в JavaScript или других языках программирования. Однако, CSS предоставляет возможность использования кастомных свойств (custom properties), которые часто называют CSS-переменными. Эти переменные позволяют хранить значения, которые можно повторно использовать в разных местах вашего CSS.

### Как объявить и использовать CSS-переменные:

1. **Объявление переменной:**
   Переменные объявляются с использованием `--` перед именем переменной. Обычно их объявляют внутри селектора, например, в `:root`, чтобы они были доступны глобально.

   ```css
   :root {
     --main-color: #3498db;
     --font-size: 16px;
   }
   ```

2. **Использование переменной:**
   Для использования переменной, вы используете функцию `var()`, указав имя переменной.

   ```css
   .button {
     background-color: var(--main-color);
     font-size: var(--font-size);
   }
   ```

3. **Изменение значения переменной:**
   Вы можете изменить значение переменной в другом месте вашего CSS, и это изменение будет применено ко всем элементам, которые используют эту переменную.

   ```css
   .button:hover {
     --main-color: #2ecc71;
   }
   ```

### Пример использования:

```css
:root {
  --primary-color: #4CAF50;
  --secondary-color: #FF9800;
}

.header {
  background-color: var(--primary-color);
  color: white;
}

.footer {
  background-color: var(--secondary-color);
  color: white;
}
```

В этом примере `--primary-color` и `--secondary-color` объявлены в `:root` и используются в селекторах `.header` и `.footer`.

### Преимущества использования CSS-переменных:

- **Повторное использование:** Легко изменять значения в одном месте и применять их ко всем элементам, которые их используют.
- **Гибкость:** Можно легко изменять стили в зависимости от состояния элемента (например, при наведении курсора).
- **Читаемость:** Код становится более читаемым и поддерживаемым, так как значения стилей централизованы.

Если у вас есть дополнительные вопросы или вам нужна помощь с конкретным примером, дайте знать!
